<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[抽象概念建造術]]></title>
  <link href="http://ryo88c.github.io/atom.xml" rel="self"/>
  <link href="http://ryo88c.github.io/"/>
  <updated>2014-01-01T22:22:15+09:00</updated>
  <id>http://ryo88c.github.io/</id>
  <author>
    <name><![CDATA[Ryo HAYASHI]]></name>
    <email><![CDATA[ryo88c@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Greetings of the New Year]]></title>
    <link href="http://ryo88c.github.io/2014/01/01/greetings-of-the-new-year/"/>
    <updated>2014-01-01T19:48:55+09:00</updated>
    <id>http://ryo88c.github.io/2014/01/01/greetings-of-the-new-year</id>
    <content type="html"><![CDATA[<p>あけましておめでとうございます。「一年の計は元旦にあり」と言いますので、今年一年を通じて遂行すると計画しましたことをこうやって実行するに至りました。
GitHub にデプロイしましたがコード量はおそらく少なめですし、記事のテーマも技術的ではないことが多くなると思います。ここは私にとってのゴムで出来たアヒルとして、今後私自身の思考を補助する役目を果たして貰えればと考えております。</p>

<h1>宇宙の形成</h1>

<p>物理空間と情報空間2つの関係に依って構成されている。物理空間は原則として情報空間にある情報（リソース）の再現しか出来ない。そしてその再現にはエネルギーという形で情報空間から物理空間にリソースが渡される。
素粒子が振動するひもとして定義されているのは、ひもの振動によって情報空間からの情報が物理空間に形として再現されていることを示していて、情報空間から渡された情報のポテンシャルが重力として観測されている。</p>

<h1>情報の移動</h1>

<p>A の事を知らない B に私から A の事を伝えた場合、私から B に物理的な交換がないにもかかわらず A の情報が移動している。つまり情報の伝播に物理空間の寄与は必ずしも必要ではない。と、考えてしまいがちだけど、実際には空気の振動という物理的現象によって伝搬されているため、実際には A の情報が言語という変換方法を用いて空気の振動に抽象化され、物質間を移動している。</p>

<h1>物理空間の再現性</h1>

<p>物理空間は情報空間に存在する情報の再現をしているに過ぎないので、例えば全く同じ構成で粒子を組み立てた場合、私は同時に複数存在することができる。この仕組みを応用した理論が量子テレポーテーションで、テレポーテーションとワープの違いは前者が情報の再構成を指し、後者が物体の移動を指している。</p>

<h1>ハイパーリンク</h1>

<p>ハイパーリンクは情報（リソース）を URI に抽象化することで、ハイパーリンクが存在する世界において情報の変位に依存しないための仕組みである。つまり「来週エベレストに登る」という言葉から現在のエベレストの状態と来週がいつであるかを確定しなければならない制約を取り除く方法であり、物理空間に明示された情報の不確かさに依存しない再現手段である。</p>

<h1>印象の移動</h1>

<p>MVVM パターンを取り入れた AngularJS が既存の MVVM をより HTML に特化させたアプローチとして、振る舞いの分離がある。振る舞いの分離とはつまり印象移動的アプローチを指し、冷却した二酸化炭素を噴射すると冷気に反応した空気中の水分が凝結して煙状に見えるような現象を指す。
例示では二酸化炭素だが、別に二酸化炭素である必要はなく、空気中の水分が凝結する温度でかつ人体や環境に悪影響のない物質であればなんでもよい。これと同じで、「光を屈折させる物質の状態」を再現できる振る舞いがあり、その振る舞いは特定の物質に依らない。これを実装したのが AngularJS (1.2 以降) における MVVM パターンの最も大きな特徴。</p>

<h1>ドメイン駆動設計における具体的アプローチ</h1>

<p>ドメインは系統樹であり、系統樹は階層化されたエンティティをモデルとして定義したものである。つまりドメインはシステムの最も外側に位置するモデルであり、系統樹における枝の分岐パターンがイベントであり、イベントによる変化全体をサービスとして実装し、それらサービスが積み重なってシステムはアプリケーションとなる。</p>

<h1>痛みと快楽</h1>

<p><a href="http://d.hatena.ne.jp/yam_yam/20131230/p1">http://d.hatena.ne.jp/yam_yam/20131230/p1</a>
<a href="http://voqn.hatenablog.com/entry/2014/01/01/060521">http://voqn.hatenablog.com/entry/2014/01/01/060521</a></p>

<p>ゲームによって何が得られて、何が失われるのか。ゲームをやり続けたから達せられた目標、ゲームによって失われたなにか。全て結果論で前もって予測できる性質のものではない。
我々は教育という手段によって常に選択肢を狭められながら物理的に成長していく。「人を殺し続けて最強の勇者になれた」というエントリが無いのは原則我々の社会が他人を殺すことを是としていないためである。つまり、全ての大人は自分の価値観に依って勝手気ままな意見を述べる権利を持っている。言い換えればそれを我々は社会と呼んでいる。
一つ目の記事が親のモラルハラスメント的観点で述べられている事が問題の本質をぼかす悪因となっていて、このトピックの隠された本質は「安易な快楽が人間性を奪う」という問題である。生命の本質は自意識にあり、自意識とは痛みから発せられたものである。それ故幼少期に”快楽を得られない痛み”を得られない人間は社会性を欠く。何故ならば自意識の喪失は自分とそれ以外の存在の区別を曖昧にするからだ。</p>

<p>キリスト教が述べる愛はちょうどこれの真逆であり、「汝の敵を愛す」とは自分と自分以外の存在を区別した上で自分以外の存在が持つ評価を自己に置き換えて評価する極めて高度な手法を指している。即ち快楽を刺激することに主眼をおいた現在のゲームによって快楽を刺激され続けた子供は社会性を養うことが出来ず、愛を持つことが出来ない。それ故社会の崩壊を助長する。</p>

<p>人間は愛によって自らを傷つけることができる。全ての宗教と哲学が紀元前から共通して述べている事実を無視して親から子供への、教師から子供への体罰が制限され、個性を重んずるという大義名分によって社会性の育成が阻害された子どもたちが自覚なく社会を滅ぼす。
知恵なく知識だけを持つ人が自分の立つ地面を照らすためだけに子供と社会の将来を消費し奪う。日本人は地理的要因に依って資源の神格化と人間自体の資源化でもってゆるやかな自己崩壊を続けている。これまで飢饉や戦争に依って免れてきたそれらは、平和によって免疫過剰的反応を示している。</p>

<p>2つの記事はいずれも子供の置かれた状況を用いて如何に自分の選択が優れているかを述べているに過ぎない。教育を否定しつつ教育を語る。教育が失われた国がどこへ向かうのか、考えたくもない。</p>
]]></content>
  </entry>
  
</feed>
